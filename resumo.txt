Dados Primitivos

number: números inteiros, conta de matemática etc..
string: caracteres, textos, informações etc...
boolean: verdadeiro e falso, se as variaveis são iguais

-------------------------------------------------------------------------
Regras dos sinais (concatenação)

os dois sinais == quer dizer quem tem que ser do mesmo valor
Ex: const number = 1;
    const tetxo = '1';
    console.log(number == tetxo)
    true
Obs: era par ser falso, pois um é numero e outro tetxo

Os três sinais === quer dizer se são do mesmo valor e se é number ou string
    const number = 1;
    const tetxo = '1';
    console.log(number === tetxo)
    true    

-------------------------------------------------------------------------
variaveis e seus significados

var1- é para algo maior, extenso
let- determinadas parte codigo, if e else não precisa dar um valor à ela
const- é para uma função, algo mais especifico é algo constante ela precisa de um valor

-------------------------------------------------------------------------
truthy ou falsy

É como javascript entende como true ou false
se os valores são iguais ou não

-------------------------------------------------------------------------
Conversões implícitas 

Usar os comandos do javascript
Number() que tudo que estiver dentro vai ser transformado em número
String() que tudo que estiver dentro vai ser transformado em string

-------------------------------------------------------------------------
Linguagem e especificações

Linguagem interpretada o código funcionando por partes, linha por linha
Linguagem compilados o código só funciona se tudo estiver pronto e é executado no final

-------------------------------------------------------------------------
Comparação (Logíca de programação)

|| : Operador "ou", retorna true caso uma seja válida; uma é verdadeira e outra é falsa
&& : Operador "e", retorna true somente se todas as condições forem válidas; os dois são verdadeiro ou falso

!= e !== : Operadores "não igual" e "estritamente não igual", para dizer que está negando algo.

--------------------------------------------------------------------------

Funções matemáticas

Math.round() : faz o arredondamento (round em inglês) de um número de ponto flutuante para o inteiro
mais próximo.

Ex:
Math.round(4.3) retorna 4
Math.round(3.85) retorna 4
Math.round(2.5) retorna 3, quando o número termina com 0.5 função
arredonda para cima

Math.ceil(): Faz o arredondamento para o valor mais alto, também conhecido como teto (ceil em inglês).
Math.ceil(5.2) retorna 6

Math.floor(): Faz o arredondamento para o valor mais baixo, também conhecido como piso (floor em inglês).
Math.floor(5.2) retorna 5

Math.trunc() : Desconsidera os números decimais, o que é conhecido como truncamento.
Math.trunc(4.3) retorna 4
Math.trunc(4.8) retorna 4

Math.pow() : Faz a exponenciação de 2 números, quando for simples, como ao quadrado(2) ou cubo(3). Recomenda-se usar a multiplicação por ser mais rápido.
Math.pow(4 , 2) retorna 4^2 = 16
Math.pow(2.5 , 1.5) retorna 2.5^(3/2) = 3.9528 ...

Math.sqrt() : Retorna a raiz quadrada de um número.
Math.sqrt(64) retorna 8

Math.min(): Retorna o menor valor entre os argumentos.
Math.min(0, 150, 30, 20, -8, -200) retorna -200

Math.random(): Retorna um valor randômico (random em inglês) entre 0 e 1, então não teremos um valor esperado para receber.
Math.random() retorna 0.7456916270759015
Math.random() retorna 0.15449802102729304
Math.random() retorna 0.4214269561951203

--------------------------------------------------------------------------

Parâmetros 

são as declarações que agente coloca no nome da function

argumentos

são os valores qua a agente coloca depois da função